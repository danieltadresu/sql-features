--DDL for POSTULANTE
    create table POSTULANTE (
        RUN_POSTULANTE     NUMBER(9)    NOT NULL,
        DV_RUN             VARCHAR2(1)  NOT NULL,
        IMAGEN_POSTULANTE  BLOB         NOT NULL,   
        SUELDO_LIQUIDO     NUMBER(9)    NOT NULL,
        PRIMER_NOMBRE      VARCHAR2(45) NOT NULL,
        SEGUNDO_NOMBRE     VARCHAR2(45) NULL,
        PRIMER_APELLIDO    VARCHAR2(50) NOT NULL,
        SEGUNDO_APELLIDO   VARCHAR2(50) NOT NULL,
        FECHA_NACIMIENTO   DATE         NOT NULL,
        TELEFONO_TRABAJO   NUMBER(9)    NULL,
        TELEFONO_MOVIL     NUMBER(9)    NULL,
        EMAIL              VARCHAR2(45) NOT NULL,
        ID_ESTADO_CIVIL    NUMBER(3)    NOT NULL,
        ID_COMUNA          NUMBER(3)    NOT NULL,
        ID_ACREDITACION    NUMBER(3)    NOT NULL,
        ID_SUBSIDIO        NUMBER(3)    NOT NULL,
        ID_PROFESION        NUMBER(3)   NOT NULL
    );
    
    ALTER TABLE POSTULANTE
    ADD CONSTRAINT PK_POSTULANTE
    PRIMARY KEY(RUN_POSTULANTE);
--end DDL for POSTULANTE

--DDL for COMUNA
    CREATE TABLE COMUNA (
        ID_COMUNA          NUMBER(3)    NOT NULL,
        NOMBRE_COMUNA      VARCHAR2(50) NOT NULL,
        ID_PROVINCIA       NUMBER(3)    NOT NULL
    );
    
    --PK COMUNA
    ALTER TABLE COMUNA
    ADD CONSTRAINT PK_COMUNA
    PRIMARY KEY(ID_COMUNA);
    
    ALTER TABLE POSTULANTE
    ADD CONSTRAINT FK_COMUNA_POSTULANTE
    FOREIGN KEY(ID_COMUNA)
    REFERENCES COMUNA(ID_COMUNA);
--end DLL for COMUNA

--DDL for PROVINCIA
    CREATE TABLE PROVINCIA (
        ID_PROVINCIA      NUMBER(3)     NOT NULL, 
        NOMBRE_PROVINCIA  VARCHAR2(50)  NOT NULL,
        ID_REGION         NUMBER(3)     NOT NULL
    );
    
    --PK PROVINCIA
    ALTER TABLE PROVINCIA
    ADD CONSTRAINT PK_PROVINCIA
    PRIMARY KEY(ID_PROVINCIA);
    
    ALTER TABLE COMUNA
    ADD CONSTRAINT FK_PROVINCIA_COMUNA
    FOREIGN KEY(ID_PROVINCIA)
    REFERENCES PROVINCIA(ID_PROVINCIA);
--end DLL for

--DDL for REGION
    CREATE TABLE REGION (
        ID_REGION        NUMBER(3) NOT NULL,
        NOMBRE_REGION    VARCHAR2(50) NOT NULL
    );
    
    --PK REGION
    ALTER TABLE REGION
    ADD CONSTRAINT PK_REGION
    PRIMARY KEY(ID_REGION);
    
    ALTER TABLE PROVINCIA
    ADD CONSTRAINT FK_PROVINCIA_REGION
    FOREIGN KEY(ID_REGION)
    REFERENCES REGION(ID_REGION);
--end DLL for REGION

--DDL for PROFESION
    create table PROFESION (
        ID_PROFESION        NUMBER(3)    NOT NULL,
        NOMBRE_PROFESION    VARCHAR2(80) NOT NULL,
        ID_NIVEL_ED         NUMBER(3)    NOT NULL
    );
    
    ALTER TABLE PROFESION
    ADD CONSTRAINT PK_PROFESION
    PRIMARY KEY(ID_PROFESION);
    
    
    ALTER TABLE POSTULANTE
    ADD CONSTRAINT FK_PROFESION_POSTULANTE
    FOREIGN KEY(ID_PROFESION)
    REFERENCES PROFESION(ID_PROFESION);
    
--end DDL

--DDL for CARGA_FAMILIAR
    create table CARGA_FAMILIAR (
        RUN_CARGA          NUMBER(9)     NOT NULL,
        DV_RUN             VARCHAR2(1)   NOT NULL,
        PRIMER_NOMBRE      VARCHAR2(45)  NOT NULL,
        SEGUNDO_NOMBRE     VARCHAR2(45)  NULL,
        PRIMER_APELLIDO    VARCHAR2(50)  NOT NULL,
        SEGUNDO_APELLIDO   VARCHAR2(50)  NOT NULL,
        RUN_POSTULANTE     NUMBER(9)     NOT NULL
    );
    
    ALTER TABLE CARGA_FAMILIAR
    ADD CONSTRAINT PK_CARGA_FAMILIAR
    PRIMARY KEY(RUN_CARGA);
    
    ALTER TABLE CARGA_FAMILIAR
    ADD CONSTRAINT FK_POSTULANTE_CARGA
    FOREIGN KEY(RUN_POSTULANTE)
    REFERENCES POSTULANTE(RUN_POSTULANTE);
--end DDL for CARGA_FAMILIAR

--DDL for NIVEL_EDUCACIONAL
    CREATE TABLE NIVEL_EDUCACIONAL (
    ID_NIVEL_ED         NUMBER(3)    NOT NULL,
    DESCRIPCION         VARCHAR2(25) NOT NULL
    );

    ALTER TABLE NIVEL_EDUCACIONAL
    ADD CONSTRAINT PK_NIVEL_ED
    PRIMARY KEY(ID_NIVEL_ED);
    
    ALTER TABLE PROFESION
    ADD CONSTRAINT FK_NIVEL_ED_PROF
    FOREIGN KEY(ID_NIVEL_ED)
    REFERENCES NIVEL_EDUCACIONAL(ID_NIVEL_ED);
--end DDL NIVEL_EDUCACIONAL

--DDL for CUENTA_AHORRO
    CREATE TABLE CUENTA_AHORRO (
        ID_CUENTA         NUMBER(6)    NOT NULL,
        FECHA_APERTURA    DATE         NOT NULL,
        MONTO_AHORRADO    NUMBER(10)   NOT NULL,
        RUN_POSTULANTE    NUMBER(9)    NOT NULL,
        ID_TIPO_CUENTA    NUMBER(3)    NOT NULL
    );
    
    ALTER TABLE CUENTA_AHORRO
    ADD CONSTRAINT PK_CUENTA_AHORRO
    PRIMARY KEY(ID_CUENTA);
    
    ALTER TABLE CUENTA_AHORRO
    ADD CONSTRAINT FK_POSTULANTE_CUENTA
    FOREIGN KEY(RUN_POSTULANTE)
    REFERENCES POSTULANTE(RUN_POSTULANTE);
--end DDL for CUENTA_AHORRO

--DDL for TIPO_CUENTA
    CREATE TABLE TIPO_CUENTA (
        ID_TIPO_CUENTA    NUMBER(3)    NOT NULL,
        DESCRIPCION       VARCHAR(40)  NOT NULL
    );
    
    ALTER TABLE TIPO_CUENTA
    ADD CONSTRAINT PK_TIPO_CUENTA
    PRIMARY KEY(ID_TIPO_CUENTA);
    
    ALTER TABLE CUENTA_AHORRO
    ADD CONSTRAINT FK_TIPO_CUENTA_AHORRO
    FOREIGN KEY(ID_TIPO_CUENTA)
    REFERENCES TIPO_CUENTA(ID_TIPO_CUENTA);
--end DDL for TIPO_CUENTA

--DDL for DETALLE_DEPOSITO
    CREATE TABLE DETALLE_DEPOSITO (
        ID_DETALLE          NUMBER(3)    NOT NULL,
        MONTO               NUMBER(9)    NOT NULL,
        FECHA_DEPOSITO      DATE         NOT NULL,  
        ID_SUCURSAL       NUMBER(3)    NOT NULL,
        ID_CUENTA           NUMBER(6)   NOT NULL
    );
    
    ALTER TABLE DETALLE_DEPOSITO 
    ADD CONSTRAINT PK_DETALLE_DEPOSITO 
    PRIMARY KEY(ID_DETALLE);
    
    ALTER TABLE DETALLE_DEPOSITO
    ADD CONSTRAINT FK_DETALLE_CUENTA
    FOREIGN KEY(ID_CUENTA)
    REFERENCES CUENTA_AHORRO(ID_CUENTA);
-- end DDL for DETALLE_DEPOSITO


--DDL for ESTADO_CIVIL
    CREATE TABLE ESTADO_CIVIL (
        ID_ESTADO_CIVIL    NUMBER(3)    NOT NULL,
        DESCRIPCION        VARCHAR(45)  NOT NULL
    );
    
    ALTER TABLE ESTADO_CIVIL
    ADD CONSTRAINT PK_ESTADO_CIVIL
    PRIMARY KEY(ID_ESTADO_CIVIL);
    
    ALTER TABLE POSTULANTE
    ADD CONSTRAINT FK_ESTADO_CIVIL_POSTULANTE
    FOREIGN KEY(ID_ESTADO_CIVIL)
    REFERENCES ESTADO_CIVIL(ID_ESTADO_CIVIL);
--end DLL for ESTADO_CIVIL


--DDL for SUCURSAL 
    CREATE TABLE SUCURSAL (
        ID_SUCURSAL            NUMBER(3)    NOT NULL,
        NOMBRE_SUCURSAL        VARCHAR(45)  NOT NULL,
        ID_COMUNA              NUMBER(3)    NOT NULL,
        ID_ENTIDAD_CREDITICIA  NUMBER(3)    NOT NULL
    );
    
    ALTER TABLE SUCURSAL
    ADD CONSTRAINT PK_SUCURSAL
    PRIMARY KEY(ID_SUCURSAL);
    
    ALTER TABLE DETALLE_DEPOSITO
    ADD CONSTRAINT FK_SUCURSAL_DEPOSITO
    FOREIGN KEY(ID_SUCURSAL)
    REFERENCES SUCURSAL(ID_SUCURSAL);
    
    ALTER TABLE SUCURSAL
    ADD CONSTRAINT FK_COMUNA_SUCURSAL
    FOREIGN KEY(ID_COMUNA)
    REFERENCES COMUNA(ID_COMUNA);
--end DDL for SUCURSAL

--DDL for ENTIDAD_CREDITICIA
    CREATE TABLE ENTIDAD_CREDITICIA (
         ID_ENTIDAD_CREDITICIA  NUMBER(3)    NOT NULL,
         NOMBRE_ENTIDAD_CRED    VARCHAR(45)  NOT NULL
    );
    
    ALTER TABLE ENTIDAD_CREDITICIA 
    ADD CONSTRAINT PK_ENTIDAD_CREDITICA
    PRIMARY KEY(ID_ENTIDAD_CREDITICIA);
    
    ALTER TABLE SUCURSAL
    ADD CONSTRAINT FK_ENTIDAD_CREDITICIA_SUC 
    FOREIGN KEY(ID_ENTIDAD_CREDITICIA)
    REFERENCES ENTIDAD_CREDITICIA(ID_ENTIDAD_CREDITICIA);
--end DDL for ENTIDAD_CREDITICIA

    -- ANEXO D.

--DDL for VIVIENDA
    CREATE TABLE VIVIENDA (
        ID_VIVIENDA         NUMBER(5)   NOT NULL,
        VALOR_PROPIEDAD      NUMBER(10)  NOT NULL,
        ID_COMUNA           NUMBER(3)   NOT NULL,
        ID_TIPO_VIVIENDA    NUMBER(3)   NOT NULL
    );
    
    ALTER TABLE VIVIENDA
    ADD CONSTRAINT PK_VIVIENDA
    PRIMARY KEY(ID_VIVIENDA);
    
    ALTER TABLE VIVIENDA
    ADD CONSTRAINT FK_COMUNA_VIVIENDA
    FOREIGN KEY(ID_COMUNA)
    REFERENCES COMUNA(ID_COMUNA);
--end DDL for VIVIENDA

-- DDL for TIPO_VIVIENDA
    CREATE TABLE TIPO_VIVIENDA (
        ID_TIPO_VIVIENDA    NUMBER(3)   NOT NULL,
        NRO_PISOS           NUMBER(2)   NOT NULL,
        ID_SUBSIDIO          NUMBER(3) NOT NULL
    );
    
    
    ALTER TABLE TIPO_VIVIENDA
    ADD CONSTRAINT PK_TIPO_VIVIENDA
    PRIMARY KEY(ID_TIPO_VIVIENDA);
    
    ALTER TABLE VIVIENDA
    ADD CONSTRAINT FK_TIPO_VIVIENDA 
    FOREIGN KEY(ID_TIPO_VIVIENDA)
    REFERENCES TIPO_VIVIENDA(ID_TIPO_VIVIENDA);
-- end DDL for TIPO_VIVIENDA


-- DDL for SUBSIDIO 
    CREATE TABLE SUBSIDIO (
        ID_SUBSIDIO          NUMBER(3) NOT NULL
    );
    
    ALTER TABLE SUBSIDIO 
    ADD CONSTRAINT PK_SUBSIDIO
    PRIMARY KEY(ID_SUBSIDIO);
    
    ALTER TABLE POSTULANTE
    ADD CONSTRAINT FK_SUBSIDIO_POSTULANTE
    FOREIGN KEY(ID_SUBSIDIO)
    REFERENCES SUBSIDIO(ID_SUBSIDIO);
    
    ALTER TABLE VIVIENDA ADD ID_SUBSIDIO NUMBER;
    
    ALTER TABLE VIVIENDA 
    ADD CONSTRAINT FK_SUBSIDIO_VIVIENDA
    FOREIGN KEY(ID_SUBSIDIO)
    REFERENCES SUBSIDIO(ID_SUBSIDIO);
    
--end DDL for SUBSIDIO


--DDL for PUNTAJE_POSTULANTE
    -- 3. REQUERIMIENTOS DE INFORMACIÓN PARA EL PROCESO DE ASIGNACIÓN DE PUNTAJE A LOS POSTULANTES DEL SUBSIDIO.
    
    CREATE TABLE PUNTAJE_POSTULANTE (
        RUN_POSTULANTE            NUMBER(9)    NOT NULL,
        DV_RUN                    VARCHAR2(1)  NOT NULL,
        EDAD                      NUMBER(2)    NOT NULL,
        PUNTAJE_EDAD              NUMBER(9)    NOT NULL,
        CARGAS_FAMILIARES         NUMBER(9)    NOT NULL,
        PUNTAJE_CARGAS_FAMILIARES NUMBER(9)    NOT NULL,
        ESTADO_CIVIL              VARCHAR2(20) NOT NULL,
        PUEBLO_IND_ORIG           VARCHAR2(20) NOT NULL,
        PUNTAJE_PUEBLO_IND_ORIG   NUMBER(9)    NOT NULL,
        MONTO_AHORRO              NUMBER(10)   NOT NULL,
        PUNTAJE_MONTO_AHORRO      NUMBER(9)    NOT NULL,
        TITULO                    VARCHAR2(20) NOT NULL
    );
--end DDL for PUNTAJE_POSTULANTE





/*
CREATE TABLE TRAMO_MONTO_AHORRADO (
    ID_TRAMO_AHORRO     NUMBER(3)   NOT NULL,
    TRAMO_INF           NUMBER(10)  NOT NULL,
    TRAMO_SUP           NUMBER(10)  NOT NULL,
    PUNTAJE             NUMBER(10)  NOT NULL,
    PRIMARY KEY(ID_TRAMO_AHORRO)
);
*/


-- DDL for PUNTAJE_EDAD
    CREATE TABLE PUNTAJE_EDAD (
        ID_PUNTAJE_EDAD  NUMBER(3)   NOT NULL,
        TRAMO_INF           NUMBER(10)  NOT NULL,
        TRAMO_SUP           NUMBER(10)  NOT NULL,
        PUNTAJE             NUMBER(10)  NOT NULL,
        PRIMARY KEY(ID_PUNTAJE_EDAD)
    );
-- end DDL for PUNTAJE_EDAD

--DDL for PUNTAJE_CARGA_FAMILIAR
    CREATE TABLE PUNTAJE_CARGA_FAMILIAR (
        ID_PUNTAJE_CARGA    NUMBER(3)   NOT NULL,
        TRAMO_INF           NUMBER(10)  NOT NULL,
        TRAMO_SUP           NUMBER(10)  NOT NULL,
        PUNTAJE             NUMBER(10)  NOT NULL,
        PRIMARY KEY(ID_PUNTAJE_CARGA)
    );
--end DDL for PUNTAJE_CARGA_FAMILIAR

--DDL for PUNTAJE_ESTADO_CIVIL
    CREATE TABLE PUNTAJE_ESTADO_CIVIL (
        ID_PUNTAJE_CIVIL    NUMBER(3)   NOT NULL,
        TRAMO_INF           NUMBER(10)  NOT NULL,
        TRAMO_SUP           NUMBER(10)  NOT NULL,
        PUNTAJE             NUMBER(10)  NOT NULL,
        PRIMARY KEY(ID_PUNTAJE_CIVIL)
    );
--end DDL for PUNTAJE_ESTADO_CIVIL

--DDL for PUNTAJE_MONTO_AHORRO
    CREATE TABLE PUNTAJE_MONTO_AHORRO (
        ID_PUNTAJE_MONTO    NUMBER(3)   NOT NULL,
        TRAMO_INF           NUMBER(10)  NOT NULL,
        TRAMO_SUP           NUMBER(10)  NOT NULL,
        PUNTAJE             NUMBER(10)  NOT NULL,
        PRIMARY KEY(ID_PUNTAJE_MONTO)
    );
--end DDL for PUNTAJE_MONTO_AHORRO

--DDL for PUNTAJE_TITULO
    CREATE TABLE PUNTAJE_TITULO (
        ID_PUNTAJE_TITULO   NUMBER(3)   NOT NULL,
        TRAMO_INF           NUMBER(10)  NOT NULL,
        TRAMO_SUP           NUMBER(10)  NOT NULL,
        PUNTAJE             NUMBER(10)  NOT NULL,
        PRIMARY KEY(ID_PUNTAJE_TITULO)
    );
--end DDL for PUNTAJE_MONTO_AHORRO


--DDL for ACREDITACION_INDIGENA
    CREATE TABLE ACREDITACION_INDIGENA (
        ID_ACREDITACION     NUMBER(5) NOT NULL,
        DESCRIPCION         VARCHAR(100) NOT NULL
    );
    
    ALTER TABLE ACREDITACION_INDIGENA
    ADD CONSTRAINT PK_ACREDITACION
    PRIMARY KEY(ID_ACREDITACION);
    
    ALTER TABLE POSTULANTE 
    ADD CONSTRAINT PK_ACRED_POSTUANTE
    FOREIGN KEY(ID_ACREDITACION)
    REFERENCES ACREDITACION_INDIGENA(ID_ACREDITACION);
    
--end DDL for ACREDITACION_INDIGENA
